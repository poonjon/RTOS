

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Nov 03 09:51:58 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           	psect	idataCOMRAM
    30  0005C6                     __pidataCOMRAM:
    31                           	opt stack 0
    32                           
    33                           ;initializer for _number
    34  0005C6  EE                 	db	238
    35  0005C7  82                 	db	130
    36  0005C8  DC                 	db	220
    37  0005C9  D6                 	db	214
    38  0005CA  B2                 	db	178
    39  0005CB  76                 	db	118
    40  0005CC  7E                 	db	126
    41  0005CD  C2                 	db	194
    42  0005CE  FE                 	db	254
    43  0005CF  F2                 	db	242
    44  0005D0  FA                 	db	250
    45  0005D1  3E                 	db	62
    46  0005D2  6C                 	db	108
    47  0005D3  9E                 	db	158
    48  0005D4  7C                 	db	124
    49  0005D5  78                 	db	120
    50  0000                     _INTCONbits	set	4082
    51  0000                     _OSCCONbits	set	4051
    52  0000                     _PIE1bits	set	3997
    53  0000                     _PIR1bits	set	3998
    54  0000                     _PORTCbits	set	3970
    55  0000                     _PORTDbits	set	3971
    56  0000                     _RCREG	set	4014
    57  0000                     _RCSTA	set	4011
    58  0000                     _RCSTAbits	set	4011
    59  0000                     _SPBRG	set	4015
    60  0000                     _SPBRGH	set	4016
    61  0000                     _SSPBUF	set	4041
    62  0000                     _SSPCON1	set	4038
    63  0000                     _SSPCON1bits	set	4038
    64  0000                     _SSPSTAT	set	4039
    65  0000                     _SSPSTATbits	set	4039
    66  0000                     _T0CON	set	4053
    67  0000                     _T0CONbits	set	4053
    68  0000                     _TMR0H	set	4055
    69  0000                     _TMR0L	set	4054
    70  0000                     _TRISAbits	set	3986
    71  0000                     _TRISCbits	set	3988
    72  0000                     _TRISDbits	set	3989
    73  0000                     _TXREG	set	4013
    74  0000                     _TXSTA	set	4012
    75  0000                     _TXSTAbits	set	4012
    76                           
    77                           ; #config settings
    78  0000                     
    79                           	psect	cinit
    80  000506                     __pcinit:
    81                           	opt stack 0
    82  000506                     start_initialization:
    83                           	opt stack 0
    84  000506                     __initialization:
    85                           	opt stack 0
    86                           
    87                           ; Clear objects allocated to COMRAM (5 bytes)
    88  000506  6A41               	clrf	(__pbssCOMRAM+4)& (0+255),c
    89  000508  6A40               	clrf	(__pbssCOMRAM+3)& (0+255),c
    90  00050A  6A3F               	clrf	(__pbssCOMRAM+2)& (0+255),c
    91  00050C  6A3E               	clrf	(__pbssCOMRAM+1)& (0+255),c
    92  00050E  6A3D               	clrf	__pbssCOMRAM& (0+255),c
    93                           
    94                           ; Initialize objects allocated to COMRAM (16 bytes)
    95                           ; load TBLPTR registers with __pidataCOMRAM
    96  000510  0EC6               	movlw	low __pidataCOMRAM
    97  000512  6EF6               	movwf	tblptrl,c
    98  000514  0E05               	movlw	high __pidataCOMRAM
    99  000516  6EF7               	movwf	tblptrh,c
   100  000518  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   101  00051A  6EF8               	movwf	tblptru,c
   102  00051C  EE00  F02D         	lfsr	0,__pdataCOMRAM
   103  000520  EE10 F010          	lfsr	1,16
   104  000524                     copy_data0:
   105  000524  0009               	tblrd		*+
   106  000526  CFF5 FFEE          	movff	tablat,postinc0
   107  00052A  50E5               	movf	postdec1,w,c
   108  00052C  50E1               	movf	fsr1l,w,c
   109  00052E  E1FA               	bnz	copy_data0
   110  000530                     end_of_initialization:
   111                           	opt stack 0
   112  000530                     __end_of__initialization:
   113                           	opt stack 0
   114  000530  0E00               	movlw	low (__Lmediumconst shr (0+16))
   115  000532  6EF8               	movwf	tblptru,c
   116  000534  0100               	movlb	0
   117  000536  EF29  F002         	goto	_main	;jump to C main() function
   118                           tblptru	equ	0xFF8
   119                           tblptrh	equ	0xFF7
   120                           tblptrl	equ	0xFF6
   121                           tablat	equ	0xFF5
   122                           postinc0	equ	0xFEE
   123                           postdec1	equ	0xFE5
   124                           fsr1l	equ	0xFE1
   125                           
   126                           	psect	bssCOMRAM
   127  00003D                     __pbssCOMRAM:
   128                           	opt stack 0
   129  00003D                     _clock:
   130                           	opt stack 0
   131  00003D                     	ds	4
   132  000041                     _USART_Status:
   133                           	opt stack 0
   134  000041                     	ds	1
   135                           tblptru	equ	0xFF8
   136                           tblptrh	equ	0xFF7
   137                           tblptrl	equ	0xFF6
   138                           tablat	equ	0xFF5
   139                           postinc0	equ	0xFEE
   140                           postdec1	equ	0xFE5
   141                           fsr1l	equ	0xFE1
   142                           
   143                           	psect	dataCOMRAM
   144  00002D                     __pdataCOMRAM:
   145                           	opt stack 0
   146  00002D                     _number:
   147                           	opt stack 0
   148  00002D                     	ds	16
   149                           tblptru	equ	0xFF8
   150                           tblptrh	equ	0xFF7
   151                           tblptrl	equ	0xFF6
   152                           tablat	equ	0xFF5
   153                           postinc0	equ	0xFEE
   154                           postdec1	equ	0xFE5
   155                           fsr1l	equ	0xFE1
   156                           
   157                           	psect	cstackCOMRAM
   158  000001                     __pcstackCOMRAM:
   159                           	opt stack 0
   160  000001                     ??_interruptISR:
   161  000001                     
   162                           ; 1 bytes @ 0x0
   163  000001                     	ds	14
   164  00000F                     ?_getClock:
   165                           	opt stack 0
   166  00000F                     OpenSPI@bus_mode:
   167                           	opt stack 0
   168  00000F                     WriteSPI@TempVar:
   169                           	opt stack 0
   170  00000F                     OpenTimer0@config:
   171                           	opt stack 0
   172  00000F                     startSPI@data:
   173                           	opt stack 0
   174  00000F                     LEDInit@data:
   175                           	opt stack 0
   176  00000F                     OpenUSART@spbrg:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0xE
   180  00000F                     	ds	1
   181  000010                     OpenSPI@smp_phase:
   182                           	opt stack 0
   183  000010                     WriteSPI@data_out:
   184                           	opt stack 0
   185                           
   186                           ; 1 bytes @ 0xF
   187  000010                     	ds	1
   188  000011                     ??_OpenUSART:
   189  000011                     OpenSPI@sync_mode:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0x10
   193  000011                     	ds	2
   194  000013                     sevenSegmentSM@data:
   195                           	opt stack 0
   196  000013                     LEDFSM@data:
   197                           	opt stack 0
   198                           
   199                           ; 2 bytes @ 0x12
   200  000013                     	ds	1
   201  000014                     OpenUSART@config:
   202                           	opt stack 0
   203                           
   204                           ; 1 bytes @ 0x13
   205  000014                     	ds	1
   206  000015                     ??_LEDFSM:
   207  000015                     ??_sevenSegmentSM:
   208                           
   209                           ; 0 bytes @ 0x14
   210  000015                     	ds	12
   211  000021                     main@ledData:
   212                           	opt stack 0
   213                           
   214                           ; 5 bytes @ 0x20
   215  000021                     	ds	5
   216  000026                     main@spiData:
   217                           	opt stack 0
   218                           
   219                           ; 7 bytes @ 0x25
   220  000026                     	ds	7
   221                           tblptru	equ	0xFF8
   222                           tblptrh	equ	0xFF7
   223                           tblptrl	equ	0xFF6
   224                           tablat	equ	0xFF5
   225                           postinc0	equ	0xFEE
   226                           postdec1	equ	0xFE5
   227                           fsr1l	equ	0xFE1
   228                           
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 27 in file "../src/PIC18/main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;  spiData         7   37[COMRAM] struct SPIData
   239 ;;  ledData         5   32[COMRAM] struct LEDData
   240 ;; Return value:  Size  Location     Type
   241 ;;		None               void
   242 ;; Registers used:
   243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   249 ;;      Params:         0       0       0       0       0       0       0
   250 ;;      Locals:        12       0       0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0       0       0
   252 ;;      Totals:        12       0       0       0       0       0       0
   253 ;;Total ram usage:       12 bytes
   254 ;; Hardware stack levels required when called:    5
   255 ;; This function calls:
   256 ;;		_LEDFSM
   257 ;;		_LEDInit
   258 ;;		_OpenSPI
   259 ;;		_OpenUSART
   260 ;;		_initClock
   261 ;;		_sevenSegmentSM
   262 ;;		_startSPI
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text0
   269  000452                     __ptext0:
   270                           	opt stack 0
   271  000452                     _main:
   272                           	opt stack 26
   273                           
   274                           ;main.c: 28: (OSCCONbits.IRCF = 7);
   275                           
   276                           ;incstack = 0
   277  000452  88D3               	bsf	4051,4,c	;volatile
   278  000454  8AD3               	bsf	4051,5,c	;volatile
   279  000456  8CD3               	bsf	4051,6,c	;volatile
   280                           
   281                           ;main.c: 29: OpenUSART(0b01111111 & 0b10111111 & 0b11111110 & 0b11111101 & 0b11111111 & 
      +                          0b11111111, 51);;
   282  000458  0E00               	movlw	0
   283  00045A  6E10               	movwf	OpenUSART@spbrg+1,c
   284  00045C  0E33               	movlw	51
   285  00045E  6E0F               	movwf	OpenUSART@spbrg,c
   286  000460  0E3C               	movlw	60
   287  000462  ECF5  F001         	call	_OpenUSART
   288                           
   289                           ;main.c: 30: SPIData spiData;
   290                           ;main.c: 31: LEDData ledData;
   291                           ;main.c: 33: OpenSPI(0b00000000, 0b00000011, 0b10000000);
   292  000466  0E03               	movlw	3
   293  000468  6E0F               	movwf	OpenSPI@bus_mode,c
   294  00046A  0E80               	movlw	128
   295  00046C  6E10               	movwf	OpenSPI@smp_phase,c
   296  00046E  0E00               	movlw	0
   297  000470  EC56  F002         	call	_OpenSPI
   298                           
   299                           ;main.c: 34: startSPI(&spiData);
   300  000474  0E00               	movlw	high main@spiData
   301  000476  6E10               	movwf	startSPI@data+1,c
   302  000478  0E26               	movlw	low main@spiData
   303  00047A  6E0F               	movwf	startSPI@data,c
   304  00047C  ECC8  F002         	call	_startSPI	;wreg free
   305                           
   306                           ;main.c: 35: initClock();
   307  000480  ECAD  F002         	call	_initClock	;wreg free
   308                           
   309                           ;main.c: 36: LEDInit(&ledData);
   310  000484  0E00               	movlw	high main@ledData
   311  000486  6E10               	movwf	LEDInit@data+1,c
   312  000488  0E21               	movlw	low main@ledData
   313  00048A  6E0F               	movwf	LEDInit@data,c
   314  00048C  ECEB  F002         	call	_LEDInit	;wreg free
   315  000490                     l1033:
   316                           
   317                           ;main.c: 38: LEDFSM(&ledData);
   318  000490  0E00               	movlw	high main@ledData
   319  000492  6E14               	movwf	LEDFSM@data+1,c
   320  000494  0E21               	movlw	low main@ledData
   321  000496  6E13               	movwf	LEDFSM@data,c
   322  000498  EC0E  F000         	call	_LEDFSM	;wreg free
   323                           
   324                           ;main.c: 39: sevenSegmentSM(&spiData);
   325  00049C  0E00               	movlw	high main@spiData
   326  00049E  6E14               	movwf	sevenSegmentSM@data+1,c
   327  0004A0  0E26               	movlw	low main@spiData
   328  0004A2  6E13               	movwf	sevenSegmentSM@data,c
   329  0004A4  ECEB  F000         	call	_sevenSegmentSM	;wreg free
   330  0004A8  D7F3               	goto	l1033
   331  0004AA                     l43:
   332  0004AA  D7FF               	goto	l43
   333  0004AC                     __end_of_main:
   334                           	opt stack 0
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           postdec1	equ	0xFE5
   341                           fsr1l	equ	0xFE1
   342                           
   343 ;; *************** function _startSPI *****************
   344 ;; Defined at:
   345 ;;		line 23 in file "../src/PIC18/sevenSegment.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;  data            2   14[COMRAM] PTR struct SPIData
   348 ;;		 -> main@spiData(7), 
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;		None               void
   353 ;; Registers used:
   354 ;;		wreg, fsr2l, fsr2h
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   360 ;;      Params:         2       0       0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0
   363 ;;      Totals:         2       0       0       0       0       0       0
   364 ;;Total ram usage:        2 bytes
   365 ;; Hardware stack levels used:    1
   366 ;; Hardware stack levels required when called:    3
   367 ;; This function calls:
   368 ;;		Nothing
   369 ;; This function is called by:
   370 ;;		_main
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           	psect	text1
   375  000590                     __ptext1:
   376                           	opt stack 0
   377  000590                     _startSPI:
   378                           	opt stack 27
   379                           
   380                           ;sevenSegment.c: 24: TRISCbits.TRISC2 = 0;
   381                           
   382                           ;incstack = 0
   383  000590  9494               	bcf	3988,2,c	;volatile
   384                           
   385                           ;sevenSegment.c: 25: PORTCbits.RC2 = 1;
   386  000592  8482               	bsf	3970,2,c	;volatile
   387                           
   388                           ;sevenSegment.c: 26: data->state = SPI_START;
   389  000594  C00F  FFD9         	movff	startSPI@data,fsr2l
   390  000598  C010  FFDA         	movff	startSPI@data+1,fsr2h
   391  00059C  0E00               	movlw	0
   392  00059E  6EDF               	movwf	indf2,c
   393  0005A0  0012               	return	
   394  0005A2                     __end_of_startSPI:
   395                           	opt stack 0
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           postinc0	equ	0xFEE
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           indf2	equ	0xFDF
   404                           fsr2h	equ	0xFDA
   405                           fsr2l	equ	0xFD9
   406                           
   407 ;; *************** function _sevenSegmentSM *****************
   408 ;; Defined at:
   409 ;;		line 33 in file "../src/PIC18/sevenSegment.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;  data            2   18[COMRAM] PTR struct SPIData
   412 ;;		 -> main@spiData(7), 
   413 ;; Auto vars:     Size  Location     Type
   414 ;;		None
   415 ;; Return value:  Size  Location     Type
   416 ;;		None               void
   417 ;; Registers used:
   418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   424 ;;      Params:         2       0       0       0       0       0       0
   425 ;;      Locals:         0       0       0       0       0       0       0
   426 ;;      Temps:         12       0       0       0       0       0       0
   427 ;;      Totals:        14       0       0       0       0       0       0
   428 ;;Total ram usage:       14 bytes
   429 ;; Hardware stack levels used:    1
   430 ;; Hardware stack levels required when called:    4
   431 ;; This function calls:
   432 ;;		_WriteSPI
   433 ;;		_getClock
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text2
   440  0001D6                     __ptext2:
   441                           	opt stack 0
   442  0001D6                     _sevenSegmentSM:
   443                           	opt stack 26
   444                           
   445                           ;sevenSegment.c: 34: switch(data->state){
   446                           
   447                           ;incstack = 0
   448  0001D6  D0C7               	goto	l1009
   449  0001D8                     l987:
   450                           
   451                           ;sevenSegment.c: 36: data->currentClock = getClock();
   452  0001D8  ECD1  F002         	call	_getClock	;wreg free
   453  0001DC  C00F  F015         	movff	?_getClock,??_sevenSegmentSM
   454  0001E0  C010  F016         	movff	?_getClock+1,??_sevenSegmentSM+1
   455  0001E4  C011  F017         	movff	?_getClock+2,??_sevenSegmentSM+2
   456  0001E8  C012  F018         	movff	?_getClock+3,??_sevenSegmentSM+3
   457  0001EC  EE20 F003          	lfsr	2,3
   458  0001F0  5013               	movf	sevenSegmentSM@data,w,c
   459  0001F2  26D9               	addwf	fsr2l,f,c
   460  0001F4  5014               	movf	sevenSegmentSM@data+1,w,c
   461  0001F6  22DA               	addwfc	fsr2h,f,c
   462  0001F8  C015  FFDE         	movff	??_sevenSegmentSM,postinc2
   463  0001FC  C016  FFDE         	movff	??_sevenSegmentSM+1,postinc2
   464  000200  C017  FFDE         	movff	??_sevenSegmentSM+2,postinc2
   465  000204  C018  FFDD         	movff	??_sevenSegmentSM+3,postdec2
   466  000208  06D9               	decf	fsr2l,f,c
   467  00020A  06D9               	decf	fsr2l,f,c
   468                           
   469                           ;sevenSegment.c: 37: data->sevenData = 0;
   470  00020C  EE20 F001          	lfsr	2,1
   471  000210  5013               	movf	sevenSegmentSM@data,w,c
   472  000212  26D9               	addwf	fsr2l,f,c
   473  000214  5014               	movf	sevenSegmentSM@data+1,w,c
   474  000216  22DA               	addwfc	fsr2h,f,c
   475  000218  0E00               	movlw	0
   476  00021A  6EDE               	movwf	postinc2,c
   477  00021C  0E00               	movlw	0
   478  00021E  6EDD               	movwf	postdec2,c
   479                           
   480                           ;sevenSegment.c: 38: data->state = WAIT;
   481  000220  C013  FFD9         	movff	sevenSegmentSM@data,fsr2l
   482  000224  C014  FFDA         	movff	sevenSegmentSM@data+1,fsr2h
   483  000228  0E01               	movlw	1
   484  00022A  6EDF               	movwf	indf2,c
   485                           
   486                           ;sevenSegment.c: 39: WriteSPI(number[data->sevenData]);
   487  00022C  EE20 F001          	lfsr	2,1
   488  000230  5013               	movf	sevenSegmentSM@data,w,c
   489  000232  26D9               	addwf	fsr2l,f,c
   490  000234  5014               	movf	sevenSegmentSM@data+1,w,c
   491  000236  22DA               	addwfc	fsr2h,f,c
   492  000238  CFDE F015          	movff	postinc2,??_sevenSegmentSM
   493  00023C  CFDD F016          	movff	postdec2,??_sevenSegmentSM+1
   494  000240  0E2D               	movlw	low _number
   495  000242  2415               	addwf	??_sevenSegmentSM,w,c
   496  000244  6ED9               	movwf	fsr2l,c
   497  000246  0E00               	movlw	high _number
   498  000248  2016               	addwfc	??_sevenSegmentSM+1,w,c
   499  00024A  6EDA               	movwf	fsr2h,c
   500  00024C  50DF               	movf	indf2,w,c
   501  00024E  ECBC  F002         	call	_WriteSPI
   502                           
   503                           ;sevenSegment.c: 40: break;
   504  000252  D094               	goto	l92
   505  000254                     l995:
   506                           
   507                           ;sevenSegment.c: 43: if(getClock() - data->currentClock >= 488){
   508  000254  EE20 F003          	lfsr	2,3
   509  000258  5013               	movf	sevenSegmentSM@data,w,c
   510  00025A  26D9               	addwf	fsr2l,f,c
   511  00025C  5014               	movf	sevenSegmentSM@data+1,w,c
   512  00025E  22DA               	addwfc	fsr2h,f,c
   513  000260  CFDE F015          	movff	postinc2,??_sevenSegmentSM
   514  000264  CFDE F016          	movff	postinc2,??_sevenSegmentSM+1
   515  000268  CFDE F017          	movff	postinc2,??_sevenSegmentSM+2
   516  00026C  CFDE F018          	movff	postinc2,??_sevenSegmentSM+3
   517  000270  1E15               	comf	??_sevenSegmentSM,f,c
   518  000272  1E16               	comf	??_sevenSegmentSM+1,f,c
   519  000274  1E17               	comf	??_sevenSegmentSM+2,f,c
   520  000276  1E18               	comf	??_sevenSegmentSM+3,f,c
   521  000278  2A15               	incf	??_sevenSegmentSM,f,c
   522  00027A  0E00               	movlw	0
   523  00027C  2216               	addwfc	??_sevenSegmentSM+1,f,c
   524  00027E  2217               	addwfc	??_sevenSegmentSM+2,f,c
   525  000280  2218               	addwfc	??_sevenSegmentSM+3,f,c
   526  000282  ECD1  F002         	call	_getClock	;wreg free
   527  000286  C00F  F019         	movff	?_getClock,??_sevenSegmentSM+4
   528  00028A  C010  F01A         	movff	?_getClock+1,??_sevenSegmentSM+5
   529  00028E  C011  F01B         	movff	?_getClock+2,??_sevenSegmentSM+6
   530  000292  C012  F01C         	movff	?_getClock+3,??_sevenSegmentSM+7
   531  000296  5015               	movf	??_sevenSegmentSM,w,c
   532  000298  2419               	addwf	??_sevenSegmentSM+4,w,c
   533  00029A  6E1D               	movwf	(??_sevenSegmentSM+8)& (0+255),c
   534  00029C  5016               	movf	??_sevenSegmentSM+1,w,c
   535  00029E  201A               	addwfc	??_sevenSegmentSM+5,w,c
   536  0002A0  6E1E               	movwf	(??_sevenSegmentSM+9)& (0+255),c
   537  0002A2  5017               	movf	??_sevenSegmentSM+2,w,c
   538  0002A4  201B               	addwfc	??_sevenSegmentSM+6,w,c
   539  0002A6  6E1F               	movwf	(??_sevenSegmentSM+10)& (0+255),c
   540  0002A8  5018               	movf	??_sevenSegmentSM+3,w,c
   541  0002AA  201C               	addwfc	??_sevenSegmentSM+7,w,c
   542  0002AC  6E20               	movwf	(??_sevenSegmentSM+11)& (0+255),c
   543  0002AE  0EE8               	movlw	232
   544  0002B0  5C1D               	subwf	??_sevenSegmentSM+8,w,c
   545  0002B2  0E01               	movlw	1
   546  0002B4  581E               	subwfb	??_sevenSegmentSM+9,w,c
   547  0002B6  0E00               	movlw	0
   548  0002B8  581F               	subwfb	??_sevenSegmentSM+10,w,c
   549  0002BA  0E00               	movlw	0
   550  0002BC  5820               	subwfb	??_sevenSegmentSM+11,w,c
   551  0002BE  A0D8               	btfss	status,0,c
   552  0002C0  D04B               	goto	l1005
   553                           
   554                           ;sevenSegment.c: 44: data->currentClock = getClock();
   555  0002C2  ECD1  F002         	call	_getClock	;wreg free
   556  0002C6  C00F  F015         	movff	?_getClock,??_sevenSegmentSM
   557  0002CA  C010  F016         	movff	?_getClock+1,??_sevenSegmentSM+1
   558  0002CE  C011  F017         	movff	?_getClock+2,??_sevenSegmentSM+2
   559  0002D2  C012  F018         	movff	?_getClock+3,??_sevenSegmentSM+3
   560  0002D6  EE20 F003          	lfsr	2,3
   561  0002DA  5013               	movf	sevenSegmentSM@data,w,c
   562  0002DC  26D9               	addwf	fsr2l,f,c
   563  0002DE  5014               	movf	sevenSegmentSM@data+1,w,c
   564  0002E0  22DA               	addwfc	fsr2h,f,c
   565  0002E2  C015  FFDE         	movff	??_sevenSegmentSM,postinc2
   566  0002E6  C016  FFDE         	movff	??_sevenSegmentSM+1,postinc2
   567  0002EA  C017  FFDE         	movff	??_sevenSegmentSM+2,postinc2
   568  0002EE  C018  FFDD         	movff	??_sevenSegmentSM+3,postdec2
   569  0002F2  06D9               	decf	fsr2l,f,c
   570  0002F4  06D9               	decf	fsr2l,f,c
   571                           
   572                           ;sevenSegment.c: 45: WriteSPI(number[data->sevenData]);
   573  0002F6  EE20 F001          	lfsr	2,1
   574  0002FA  5013               	movf	sevenSegmentSM@data,w,c
   575  0002FC  26D9               	addwf	fsr2l,f,c
   576  0002FE  5014               	movf	sevenSegmentSM@data+1,w,c
   577  000300  22DA               	addwfc	fsr2h,f,c
   578  000302  CFDE F015          	movff	postinc2,??_sevenSegmentSM
   579  000306  CFDD F016          	movff	postdec2,??_sevenSegmentSM+1
   580  00030A  0E2D               	movlw	low _number
   581  00030C  2415               	addwf	??_sevenSegmentSM,w,c
   582  00030E  6ED9               	movwf	fsr2l,c
   583  000310  0E00               	movlw	high _number
   584  000312  2016               	addwfc	??_sevenSegmentSM+1,w,c
   585  000314  6EDA               	movwf	fsr2h,c
   586  000316  50DF               	movf	indf2,w,c
   587  000318  ECBC  F002         	call	_WriteSPI
   588                           
   589                           ;sevenSegment.c: 46: data->sevenData++;
   590  00031C  EE20 F001          	lfsr	2,1
   591  000320  5013               	movf	sevenSegmentSM@data,w,c
   592  000322  26D9               	addwf	fsr2l,f,c
   593  000324  5014               	movf	sevenSegmentSM@data+1,w,c
   594  000326  22DA               	addwfc	fsr2h,f,c
   595  000328  2ADE               	incf	postinc2,f,c
   596  00032A  0E00               	movlw	0
   597  00032C  22DD               	addwfc	postdec2,f,c
   598                           
   599                           ;sevenSegment.c: 47: if(data->sevenData == 16){
   600  00032E  EE20 F001          	lfsr	2,1
   601  000332  5013               	movf	sevenSegmentSM@data,w,c
   602  000334  26D9               	addwf	fsr2l,f,c
   603  000336  5014               	movf	sevenSegmentSM@data+1,w,c
   604  000338  22DA               	addwfc	fsr2h,f,c
   605  00033A  50DE               	movf	postinc2,w,c
   606  00033C  0A10               	xorlw	16
   607  00033E  10DD               	iorwf	postdec2,w,c
   608  000340  A4D8               	btfss	status,2,c
   609  000342  D00A               	goto	l1005
   610                           
   611                           ;sevenSegment.c: 48: data->sevenData = 0;
   612  000344  EE20 F001          	lfsr	2,1
   613  000348  5013               	movf	sevenSegmentSM@data,w,c
   614  00034A  26D9               	addwf	fsr2l,f,c
   615  00034C  5014               	movf	sevenSegmentSM@data+1,w,c
   616  00034E  22DA               	addwfc	fsr2h,f,c
   617  000350  0E00               	movlw	0
   618  000352  6EDE               	movwf	postinc2,c
   619  000354  0E00               	movlw	0
   620  000356  6EDD               	movwf	postdec2,c
   621  000358                     l1005:
   622                           
   623                           ;sevenSegment.c: 49: }
   624                           ;sevenSegment.c: 50: }
   625                           ;sevenSegment.c: 52: data->state = WAIT;
   626  000358  C013  FFD9         	movff	sevenSegmentSM@data,fsr2l
   627  00035C  C014  FFDA         	movff	sevenSegmentSM@data+1,fsr2h
   628  000360  0E01               	movlw	1
   629  000362  6EDF               	movwf	indf2,c
   630                           
   631                           ;sevenSegment.c: 53: break;
   632  000364  D00B               	goto	l92
   633  000366                     l1009:
   634  000366  C013  FFD9         	movff	sevenSegmentSM@data,fsr2l
   635  00036A  C014  FFDA         	movff	sevenSegmentSM@data+1,fsr2h
   636  00036E  50DF               	movf	indf2,w,c
   637                           
   638                           ; Switch size 1, requested type "space"
   639                           ; Number of cases is 2, Range of values is 0 to 1
   640                           ; switch strategies available:
   641                           ; Name         Instructions Cycles
   642                           ; simple_byte            7     4 (average)
   643                           ;	Chosen strategy is simple_byte
   644  000370  0A00               	xorlw	0	; case 0
   645  000372  B4D8               	btfsc	status,2,c
   646  000374  D731               	goto	l987
   647  000376  0A01               	xorlw	1	; case 1
   648  000378  B4D8               	btfsc	status,2,c
   649  00037A  D76C               	goto	l995
   650  00037C                     l92:
   651  00037C  0012               	return	
   652  00037E                     __end_of_sevenSegmentSM:
   653                           	opt stack 0
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           postinc0	equ	0xFEE
   659                           postdec1	equ	0xFE5
   660                           fsr1l	equ	0xFE1
   661                           indf2	equ	0xFDF
   662                           postinc2	equ	0xFDE
   663                           postdec2	equ	0xFDD
   664                           fsr2h	equ	0xFDA
   665                           fsr2l	equ	0xFD9
   666                           status	equ	0xFD8
   667                           
   668 ;; *************** function _WriteSPI *****************
   669 ;; Defined at:
   670 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_writ.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;  data_out        1    wreg     unsigned char 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  data_out        1   15[COMRAM] unsigned char 
   675 ;;  TempVar         1   14[COMRAM] unsigned char 
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      char 
   678 ;; Registers used:
   679 ;;		wreg
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   685 ;;      Params:         0       0       0       0       0       0       0
   686 ;;      Locals:         2       0       0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0
   688 ;;      Totals:         2       0       0       0       0       0       0
   689 ;;Total ram usage:        2 bytes
   690 ;; Hardware stack levels used:    1
   691 ;; Hardware stack levels required when called:    3
   692 ;; This function calls:
   693 ;;		Nothing
   694 ;; This function is called by:
   695 ;;		_sevenSegmentSM
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text3
   700  000578                     __ptext3:
   701                           	opt stack 0
   702  000578                     _WriteSPI:
   703                           	opt stack 26
   704                           
   705                           ;incstack = 0
   706                           ;WriteSPI@data_out stored from wreg
   707  000578  6E10               	movwf	WriteSPI@data_out,c
   708  00057A  CFC9 F00F          	movff	4041,WriteSPI@TempVar	;volatile
   709  00057E  969E               	bcf	3998,3,c	;volatile
   710  000580  9EC6               	bcf	4038,7,c	;volatile
   711  000582  C010  FFC9         	movff	WriteSPI@data_out,4041	;volatile
   712  000586  BEC6               	btfsc	4038,7,c	;volatile
   713  000588  D002               	goto	l185
   714  00058A                     l187:
   715  00058A  A69E               	btfss	3998,3,c	;volatile
   716  00058C  D7FE               	goto	l187
   717  00058E                     l185:
   718  00058E  0012               	return	
   719  000590                     __end_of_WriteSPI:
   720                           	opt stack 0
   721                           tblptru	equ	0xFF8
   722                           tblptrh	equ	0xFF7
   723                           tblptrl	equ	0xFF6
   724                           tablat	equ	0xFF5
   725                           postinc0	equ	0xFEE
   726                           postdec1	equ	0xFE5
   727                           fsr1l	equ	0xFE1
   728                           indf2	equ	0xFDF
   729                           postinc2	equ	0xFDE
   730                           postdec2	equ	0xFDD
   731                           fsr2h	equ	0xFDA
   732                           fsr2l	equ	0xFD9
   733                           status	equ	0xFD8
   734                           
   735 ;; *************** function _initClock *****************
   736 ;; Defined at:
   737 ;;		line 9 in file "../src/PIC18/clock.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;		None               void
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   751 ;;      Params:         0       0       0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    4
   758 ;; This function calls:
   759 ;;		_OpenTimer0
   760 ;;		_enableInterrupt
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text4
   767  00055A                     __ptext4:
   768                           	opt stack 0
   769  00055A                     _initClock:
   770                           	opt stack 26
   771                           
   772                           ;clock.c: 10: clock = 0;
   773                           
   774                           ;incstack = 0
   775  00055A  0E00               	movlw	0
   776  00055C  6E3D               	movwf	_clock,c
   777  00055E  0E00               	movlw	0
   778  000560  6E3E               	movwf	_clock+1,c
   779  000562  0E00               	movlw	0
   780  000564  6E3F               	movwf	_clock+2,c
   781  000566  0E00               	movlw	0
   782  000568  6E40               	movwf	_clock+3,c
   783                           
   784                           ;clock.c: 11: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110010 );
   785  00056A  0ED2               	movlw	210
   786  00056C  EC9D  F002         	call	_OpenTimer0
   787                           
   788                           ;clock.c: 12: enableInterrupt();
   789  000570  ECF3  F002         	call	_enableInterrupt	;wreg free
   790                           
   791                           ;clock.c: 13: INTCONbits.TMR0IF = 0;
   792  000574  94F2               	bcf	intcon,2,c	;volatile
   793  000576  0012               	return	
   794  000578                     __end_of_initClock:
   795                           	opt stack 0
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           intcon	equ	0xFF2
   801                           postinc0	equ	0xFEE
   802                           postdec1	equ	0xFE5
   803                           fsr1l	equ	0xFE1
   804                           indf2	equ	0xFDF
   805                           postinc2	equ	0xFDE
   806                           postdec2	equ	0xFDD
   807                           fsr2h	equ	0xFDA
   808                           fsr2l	equ	0xFD9
   809                           status	equ	0xFD8
   810                           
   811 ;; *************** function _enableInterrupt *****************
   812 ;; Defined at:
   813 ;;		line 6 in file "../src/PIC18/clock.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;		None               void
   820 ;; Registers used:
   821 ;;		None
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   827 ;;      Params:         0       0       0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0
   830 ;;      Totals:         0       0       0       0       0       0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    3
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_initClock
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text5
   842  0005E6                     __ptext5:
   843                           	opt stack 0
   844  0005E6                     _enableInterrupt:
   845                           	opt stack 26
   846                           
   847                           ;clock.c: 7: INTCONbits.GIE = 1;
   848                           
   849                           ;incstack = 0
   850  0005E6  8EF2               	bsf	intcon,7,c	;volatile
   851  0005E8  0012               	return	
   852  0005EA                     __end_of_enableInterrupt:
   853                           	opt stack 0
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           intcon	equ	0xFF2
   859                           postinc0	equ	0xFEE
   860                           postdec1	equ	0xFE5
   861                           fsr1l	equ	0xFE1
   862                           indf2	equ	0xFDF
   863                           postinc2	equ	0xFDE
   864                           postdec2	equ	0xFDD
   865                           fsr2h	equ	0xFDA
   866                           fsr2l	equ	0xFD9
   867                           status	equ	0xFD8
   868                           
   869 ;; *************** function _OpenTimer0 *****************
   870 ;; Defined at:
   871 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\Timers\t0open.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  config          1    wreg     unsigned char 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  config          1   14[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;		None               void
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   885 ;;      Params:         0       0       0       0       0       0       0
   886 ;;      Locals:         1       0       0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0
   888 ;;      Totals:         1       0       0       0       0       0       0
   889 ;;Total ram usage:        1 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    3
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_initClock
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text6
   900  00053A                     __ptext6:
   901                           	opt stack 0
   902  00053A                     _OpenTimer0:
   903                           	opt stack 26
   904                           
   905                           ;incstack = 0
   906                           ;OpenTimer0@config stored from wreg
   907  00053A  6E0F               	movwf	OpenTimer0@config,c
   908  00053C  500F               	movf	OpenTimer0@config,w,c
   909  00053E  0B7F               	andlw	127
   910  000540  6ED5               	movwf	4053,c	;volatile
   911  000542  0E00               	movlw	0
   912  000544  6ED7               	movwf	4055,c	;volatile
   913  000546  0E00               	movlw	0
   914  000548  6ED6               	movwf	4054,c	;volatile
   915  00054A  94F2               	bcf	intcon,2,c	;volatile
   916  00054C  AE0F               	btfss	OpenTimer0@config,7,c
   917  00054E  D002               	goto	l202
   918  000550  8AF2               	bsf	intcon,5,c	;volatile
   919  000552  D001               	goto	l203
   920  000554                     l202:
   921  000554  9AF2               	bcf	intcon,5,c	;volatile
   922  000556                     l203:
   923  000556  8ED5               	bsf	4053,7,c	;volatile
   924  000558  0012               	return	
   925  00055A                     __end_of_OpenTimer0:
   926                           	opt stack 0
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           intcon	equ	0xFF2
   932                           postinc0	equ	0xFEE
   933                           postdec1	equ	0xFE5
   934                           fsr1l	equ	0xFE1
   935                           indf2	equ	0xFDF
   936                           postinc2	equ	0xFDE
   937                           postdec2	equ	0xFDD
   938                           fsr2h	equ	0xFDA
   939                           fsr2l	equ	0xFD9
   940                           status	equ	0xFD8
   941                           
   942 ;; *************** function _OpenUSART *****************
   943 ;; Defined at:
   944 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  config          1    wreg     unsigned char 
   947 ;;  spbrg           2   14[COMRAM] unsigned int 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  config          1   19[COMRAM] unsigned char 
   950 ;; Return value:  Size  Location     Type
   951 ;;		None               void
   952 ;; Registers used:
   953 ;;		wreg, status,2
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   959 ;;      Params:         2       0       0       0       0       0       0
   960 ;;      Locals:         1       0       0       0       0       0       0
   961 ;;      Temps:          3       0       0       0       0       0       0
   962 ;;      Totals:         6       0       0       0       0       0       0
   963 ;;Total ram usage:        6 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; Hardware stack levels required when called:    3
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text7
   974  0003EA                     __ptext7:
   975                           	opt stack 0
   976  0003EA                     _OpenUSART:
   977                           	opt stack 27
   978                           
   979                           ;incstack = 0
   980                           ;OpenUSART@config stored from wreg
   981  0003EA  6E14               	movwf	OpenUSART@config,c
   982  0003EC  0E00               	movlw	0
   983  0003EE  6EAC               	movwf	4012,c	;volatile
   984  0003F0  0E00               	movlw	0
   985  0003F2  6EAB               	movwf	4011,c	;volatile
   986  0003F4  B014               	btfsc	OpenUSART@config,0,c
   987  0003F6  88AC               	bsf	4012,4,c	;volatile
   988  0003F8  A214               	btfss	OpenUSART@config,1,c
   989  0003FA  D002               	goto	l885
   990  0003FC  8CAC               	bsf	4012,6,c	;volatile
   991  0003FE  8CAB               	bsf	4011,6,c	;volatile
   992  000400                     l885:
   993  000400  B414               	btfsc	OpenUSART@config,2,c
   994  000402  8EAC               	bsf	4012,7,c	;volatile
   995  000404  A614               	btfss	OpenUSART@config,3,c
   996  000406  D002               	goto	l228
   997  000408  88AB               	bsf	4011,4,c	;volatile
   998  00040A  D001               	goto	l893
   999  00040C                     l228:
  1000  00040C  8AAB               	bsf	4011,5,c	;volatile
  1001  00040E                     l893:
  1002  00040E  B814               	btfsc	OpenUSART@config,4,c
  1003  000410  84AC               	bsf	4012,2,c	;volatile
  1004  000412  989E               	bcf	3998,4,c	;volatile
  1005  000414  BA14               	btfsc	OpenUSART@config,5,c
  1006  000416  86AB               	bsf	4011,3,c	;volatile
  1007  000418  AC14               	btfss	OpenUSART@config,6,c
  1008  00041A  D002               	goto	l232
  1009  00041C  8A9D               	bsf	3997,5,c	;volatile
  1010  00041E  D001               	goto	l233
  1011  000420                     l232:
  1012  000420  9A9D               	bcf	3997,5,c	;volatile
  1013  000422                     l233:
  1014  000422  9A9E               	bcf	3998,5,c	;volatile
  1015  000424  AE14               	btfss	OpenUSART@config,7,c
  1016  000426  D002               	goto	l234
  1017  000428  889D               	bsf	3997,4,c	;volatile
  1018  00042A  D001               	goto	l235
  1019  00042C                     l234:
  1020  00042C  989D               	bcf	3997,4,c	;volatile
  1021  00042E                     l235:
  1022  00042E  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1023  000432  C010  F011         	movff	OpenUSART@spbrg+1,??_OpenUSART
  1024  000436  C011  F012         	movff	??_OpenUSART,??_OpenUSART+1
  1025  00043A  6A13               	clrf	(??_OpenUSART+2)& (0+255),c
  1026  00043C  5012               	movf	??_OpenUSART+1,w,c
  1027  00043E  6EB0               	movwf	4016,c	;volatile
  1028  000440  8AAC               	bsf	4012,5,c	;volatile
  1029  000442  8EAB               	bsf	4011,7,c	;volatile
  1030  000444  9C94               	bcf	3988,6,c	;volatile
  1031  000446  8E94               	bsf	3988,7,c	;volatile
  1032  000448  B8AC               	btfsc	4012,4,c	;volatile
  1033  00044A  BEAC               	btfsc	4012,7,c	;volatile
  1034  00044C  D001               	goto	l237
  1035  00044E  8C94               	bsf	3988,6,c	;volatile
  1036  000450                     l237:
  1037  000450  0012               	return	
  1038  000452                     __end_of_OpenUSART:
  1039                           	opt stack 0
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           intcon	equ	0xFF2
  1045                           postinc0	equ	0xFEE
  1046                           postdec1	equ	0xFE5
  1047                           fsr1l	equ	0xFE1
  1048                           indf2	equ	0xFDF
  1049                           postinc2	equ	0xFDE
  1050                           postdec2	equ	0xFDD
  1051                           fsr2h	equ	0xFDA
  1052                           fsr2l	equ	0xFD9
  1053                           status	equ	0xFD8
  1054                           
  1055 ;; *************** function _OpenSPI *****************
  1056 ;; Defined at:
  1057 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.33\sources\pic18\plib\SPI\spi_open.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  sync_mode       1    wreg     unsigned char 
  1060 ;;  bus_mode        1   14[COMRAM] unsigned char 
  1061 ;;  smp_phase       1   15[COMRAM] unsigned char 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  sync_mode       1   16[COMRAM] unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;		None               void
  1066 ;; Registers used:
  1067 ;;		wreg, status,2, status,0
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1073 ;;      Params:         2       0       0       0       0       0       0
  1074 ;;      Locals:         1       0       0       0       0       0       0
  1075 ;;      Temps:          0       0       0       0       0       0       0
  1076 ;;      Totals:         3       0       0       0       0       0       0
  1077 ;;Total ram usage:        3 bytes
  1078 ;; Hardware stack levels used:    1
  1079 ;; Hardware stack levels required when called:    3
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text8
  1088  0004AC                     __ptext8:
  1089                           	opt stack 0
  1090  0004AC                     _OpenSPI:
  1091                           	opt stack 27
  1092                           
  1093                           ;incstack = 0
  1094                           ;OpenSPI@sync_mode stored from wreg
  1095  0004AC  6E11               	movwf	OpenSPI@sync_mode,c
  1096  0004AE  0E3F               	movlw	63
  1097  0004B0  16C7               	andwf	4039,f,c	;volatile
  1098  0004B2  0E00               	movlw	0
  1099  0004B4  6EC6               	movwf	4038,c	;volatile
  1100  0004B6  5011               	movf	OpenSPI@sync_mode,w,c
  1101  0004B8  12C6               	iorwf	4038,f,c	;volatile
  1102  0004BA  5010               	movf	OpenSPI@smp_phase,w,c
  1103  0004BC  12C7               	iorwf	4039,f,c	;volatile
  1104  0004BE  D005               	goto	l935
  1105  0004C0                     l163:
  1106  0004C0  8CC7               	bsf	4039,6,c	;volatile
  1107  0004C2  D015               	goto	l939
  1108  0004C4                     l165:
  1109  0004C4  8CC7               	bsf	4039,6,c	;volatile
  1110  0004C6                     l166:
  1111  0004C6  88C6               	bsf	4038,4,c	;volatile
  1112  0004C8  D012               	goto	l939
  1113  0004CA                     l935:
  1114  0004CA  500F               	movf	OpenSPI@bus_mode,w,c
  1115                           
  1116                           ; Switch size 1, requested type "space"
  1117                           ; Number of cases is 3, Range of values is 0 to 3
  1118                           ; switch strategies available:
  1119                           ; Name         Instructions Cycles
  1120                           ; simple_byte           10     6 (average)
  1121                           ;	Chosen strategy is simple_byte
  1122  0004CC  0A00               	xorlw	0	; case 0
  1123  0004CE  B4D8               	btfsc	status,2,c
  1124  0004D0  D7F7               	goto	l163
  1125  0004D2  0A02               	xorlw	2	; case 2
  1126  0004D4  B4D8               	btfsc	status,2,c
  1127  0004D6  D7F6               	goto	l165
  1128  0004D8  0A01               	xorlw	1	; case 3
  1129  0004DA  B4D8               	btfsc	status,2,c
  1130  0004DC  D7F4               	goto	l166
  1131  0004DE  D007               	goto	l939
  1132  0004E0                     l169:
  1133  0004E0  8694               	bsf	3988,3,c	;volatile
  1134  0004E2  8A92               	bsf	3986,5,c	;volatile
  1135  0004E4  D00C               	goto	l170
  1136  0004E6                     l171:
  1137  0004E6  8694               	bsf	3988,3,c	;volatile
  1138  0004E8  D00A               	goto	l170
  1139  0004EA                     l172:
  1140  0004EA  9694               	bcf	3988,3,c	;volatile
  1141  0004EC  D008               	goto	l170
  1142  0004EE                     l939:
  1143  0004EE  5011               	movf	OpenSPI@sync_mode,w,c
  1144                           
  1145                           ; Switch size 1, requested type "space"
  1146                           ; Number of cases is 2, Range of values is 4 to 5
  1147                           ; switch strategies available:
  1148                           ; Name         Instructions Cycles
  1149                           ; simple_byte            7     4 (average)
  1150                           ;	Chosen strategy is simple_byte
  1151  0004F0  0A04               	xorlw	4	; case 4
  1152  0004F2  B4D8               	btfsc	status,2,c
  1153  0004F4  D7F5               	goto	l169
  1154  0004F6  0A01               	xorlw	1	; case 5
  1155  0004F8  B4D8               	btfsc	status,2,c
  1156  0004FA  D7F5               	goto	l171
  1157  0004FC  D7F6               	goto	l172
  1158  0004FE                     l170:
  1159  0004FE  8894               	bsf	3988,4,c	;volatile
  1160  000500  9A94               	bcf	3988,5,c	;volatile
  1161  000502  8AC6               	bsf	4038,5,c	;volatile
  1162  000504  0012               	return	
  1163  000506                     __end_of_OpenSPI:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           intcon	equ	0xFF2
  1170                           postinc0	equ	0xFEE
  1171                           postdec1	equ	0xFE5
  1172                           fsr1l	equ	0xFE1
  1173                           indf2	equ	0xFDF
  1174                           postinc2	equ	0xFDE
  1175                           postdec2	equ	0xFDD
  1176                           fsr2h	equ	0xFDA
  1177                           fsr2l	equ	0xFD9
  1178                           status	equ	0xFD8
  1179                           
  1180 ;; *************** function _LEDInit *****************
  1181 ;; Defined at:
  1182 ;;		line 5 in file "../src/PIC18/LEDFSM.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  data            2   14[COMRAM] PTR struct LEDData
  1185 ;;		 -> main@ledData(5), 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;		None               void
  1190 ;; Registers used:
  1191 ;;		wreg, fsr2l, fsr2h
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1197 ;;      Params:         2       0       0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0
  1200 ;;      Totals:         2       0       0       0       0       0       0
  1201 ;;Total ram usage:        2 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    3
  1204 ;; This function calls:
  1205 ;;		Nothing
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text9
  1212  0005D6                     __ptext9:
  1213                           	opt stack 0
  1214  0005D6                     _LEDInit:
  1215                           	opt stack 27
  1216                           
  1217                           ;LEDFSM.c: 6: TRISDbits.RD7 = 0;
  1218                           
  1219                           ;incstack = 0
  1220  0005D6  9E95               	bcf	3989,7,c	;volatile
  1221                           
  1222                           ;LEDFSM.c: 7: data->state = LED_START;
  1223  0005D8  C00F  FFD9         	movff	LEDInit@data,fsr2l
  1224  0005DC  C010  FFDA         	movff	LEDInit@data+1,fsr2h
  1225  0005E0  0E00               	movlw	0
  1226  0005E2  6EDF               	movwf	indf2,c
  1227  0005E4  0012               	return	
  1228  0005E6                     __end_of_LEDInit:
  1229                           	opt stack 0
  1230                           tblptru	equ	0xFF8
  1231                           tblptrh	equ	0xFF7
  1232                           tblptrl	equ	0xFF6
  1233                           tablat	equ	0xFF5
  1234                           intcon	equ	0xFF2
  1235                           postinc0	equ	0xFEE
  1236                           postdec1	equ	0xFE5
  1237                           fsr1l	equ	0xFE1
  1238                           indf2	equ	0xFDF
  1239                           postinc2	equ	0xFDE
  1240                           postdec2	equ	0xFDD
  1241                           fsr2h	equ	0xFDA
  1242                           fsr2l	equ	0xFD9
  1243                           status	equ	0xFD8
  1244                           
  1245 ;; *************** function _LEDFSM *****************
  1246 ;; Defined at:
  1247 ;;		line 10 in file "../src/PIC18/LEDFSM.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  data            2   18[COMRAM] PTR struct LEDData
  1250 ;;		 -> main@ledData(5), 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;		None               void
  1255 ;; Registers used:
  1256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1262 ;;      Params:         2       0       0       0       0       0       0
  1263 ;;      Locals:         0       0       0       0       0       0       0
  1264 ;;      Temps:         12       0       0       0       0       0       0
  1265 ;;      Totals:        14       0       0       0       0       0       0
  1266 ;;Total ram usage:       14 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; Hardware stack levels required when called:    4
  1269 ;; This function calls:
  1270 ;;		_getClock
  1271 ;; This function is called by:
  1272 ;;		_main
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text10
  1277  00001C                     __ptext10:
  1278                           	opt stack 0
  1279  00001C                     _LEDFSM:
  1280                           	opt stack 26
  1281                           
  1282                           ;LEDFSM.c: 11: switch(data->state){
  1283                           
  1284                           ;incstack = 0
  1285  00001C  D0CD               	goto	l983
  1286  00001E                     l133:
  1287                           
  1288                           ;LEDFSM.c: 13: PORTDbits.RD7 = 1;
  1289  00001E  8E83               	bsf	3971,7,c	;volatile
  1290                           
  1291                           ;LEDFSM.c: 14: data->currentClock = getClock();
  1292  000020  ECD1  F002         	call	_getClock	;wreg free
  1293  000024  C00F  F015         	movff	?_getClock,??_LEDFSM
  1294  000028  C010  F016         	movff	?_getClock+1,??_LEDFSM+1
  1295  00002C  C011  F017         	movff	?_getClock+2,??_LEDFSM+2
  1296  000030  C012  F018         	movff	?_getClock+3,??_LEDFSM+3
  1297  000034  EE20 F001          	lfsr	2,1
  1298  000038  5013               	movf	LEDFSM@data,w,c
  1299  00003A  26D9               	addwf	fsr2l,f,c
  1300  00003C  5014               	movf	LEDFSM@data+1,w,c
  1301  00003E  22DA               	addwfc	fsr2h,f,c
  1302  000040  C015  FFDE         	movff	??_LEDFSM,postinc2
  1303  000044  C016  FFDE         	movff	??_LEDFSM+1,postinc2
  1304  000048  C017  FFDE         	movff	??_LEDFSM+2,postinc2
  1305  00004C  C018  FFDD         	movff	??_LEDFSM+3,postdec2
  1306  000050  06D9               	decf	fsr2l,f,c
  1307  000052  06D9               	decf	fsr2l,f,c
  1308  000054  D0AA               	goto	L3
  1309  000056                     l965:
  1310                           
  1311                           ;LEDFSM.c: 19: if(getClock() - data->currentClock >= 488){
  1312  000056  EE20 F001          	lfsr	2,1
  1313  00005A  5013               	movf	LEDFSM@data,w,c
  1314  00005C  26D9               	addwf	fsr2l,f,c
  1315  00005E  5014               	movf	LEDFSM@data+1,w,c
  1316  000060  22DA               	addwfc	fsr2h,f,c
  1317  000062  CFDE F015          	movff	postinc2,??_LEDFSM
  1318  000066  CFDE F016          	movff	postinc2,??_LEDFSM+1
  1319  00006A  CFDE F017          	movff	postinc2,??_LEDFSM+2
  1320  00006E  CFDE F018          	movff	postinc2,??_LEDFSM+3
  1321  000072  1E15               	comf	??_LEDFSM,f,c
  1322  000074  1E16               	comf	??_LEDFSM+1,f,c
  1323  000076  1E17               	comf	??_LEDFSM+2,f,c
  1324  000078  1E18               	comf	??_LEDFSM+3,f,c
  1325  00007A  2A15               	incf	??_LEDFSM,f,c
  1326  00007C  0E00               	movlw	0
  1327  00007E  2216               	addwfc	??_LEDFSM+1,f,c
  1328  000080  2217               	addwfc	??_LEDFSM+2,f,c
  1329  000082  2218               	addwfc	??_LEDFSM+3,f,c
  1330  000084  ECD1  F002         	call	_getClock	;wreg free
  1331  000088  C00F  F019         	movff	?_getClock,??_LEDFSM+4
  1332  00008C  C010  F01A         	movff	?_getClock+1,??_LEDFSM+5
  1333  000090  C011  F01B         	movff	?_getClock+2,??_LEDFSM+6
  1334  000094  C012  F01C         	movff	?_getClock+3,??_LEDFSM+7
  1335  000098  5015               	movf	??_LEDFSM,w,c
  1336  00009A  2419               	addwf	??_LEDFSM+4,w,c
  1337  00009C  6E1D               	movwf	(??_LEDFSM+8)& (0+255),c
  1338  00009E  5016               	movf	??_LEDFSM+1,w,c
  1339  0000A0  201A               	addwfc	??_LEDFSM+5,w,c
  1340  0000A2  6E1E               	movwf	(??_LEDFSM+9)& (0+255),c
  1341  0000A4  5017               	movf	??_LEDFSM+2,w,c
  1342  0000A6  201B               	addwfc	??_LEDFSM+6,w,c
  1343  0000A8  6E1F               	movwf	(??_LEDFSM+10)& (0+255),c
  1344  0000AA  5018               	movf	??_LEDFSM+3,w,c
  1345  0000AC  201C               	addwfc	??_LEDFSM+7,w,c
  1346  0000AE  6E20               	movwf	(??_LEDFSM+11)& (0+255),c
  1347  0000B0  0EE8               	movlw	232
  1348  0000B2  5C1D               	subwf	??_LEDFSM+8,w,c
  1349  0000B4  0E01               	movlw	1
  1350  0000B6  581E               	subwfb	??_LEDFSM+9,w,c
  1351  0000B8  0E00               	movlw	0
  1352  0000BA  581F               	subwfb	??_LEDFSM+10,w,c
  1353  0000BC  0E00               	movlw	0
  1354  0000BE  5820               	subwfb	??_LEDFSM+11,w,c
  1355  0000C0  A0D8               	btfss	status,0,c
  1356  0000C2  D088               	goto	l140
  1357                           
  1358                           ;LEDFSM.c: 20: data->currentClock = getClock();
  1359  0000C4  ECD1  F002         	call	_getClock	;wreg free
  1360  0000C8  C00F  F015         	movff	?_getClock,??_LEDFSM
  1361  0000CC  C010  F016         	movff	?_getClock+1,??_LEDFSM+1
  1362  0000D0  C011  F017         	movff	?_getClock+2,??_LEDFSM+2
  1363  0000D4  C012  F018         	movff	?_getClock+3,??_LEDFSM+3
  1364  0000D8  EE20 F001          	lfsr	2,1
  1365  0000DC  5013               	movf	LEDFSM@data,w,c
  1366  0000DE  26D9               	addwf	fsr2l,f,c
  1367  0000E0  5014               	movf	LEDFSM@data+1,w,c
  1368  0000E2  22DA               	addwfc	fsr2h,f,c
  1369  0000E4  C015  FFDE         	movff	??_LEDFSM,postinc2
  1370  0000E8  C016  FFDE         	movff	??_LEDFSM+1,postinc2
  1371  0000EC  C017  FFDE         	movff	??_LEDFSM+2,postinc2
  1372  0000F0  C018  FFDD         	movff	??_LEDFSM+3,postdec2
  1373  0000F4  06D9               	decf	fsr2l,f,c
  1374  0000F6  06D9               	decf	fsr2l,f,c
  1375                           
  1376                           ;LEDFSM.c: 21: PORTDbits.RD7 = 0;
  1377  0000F8  9E83               	bcf	3971,7,c	;volatile
  1378                           
  1379                           ;LEDFSM.c: 22: data->state = LED_ON;
  1380  0000FA  C013  FFD9         	movff	LEDFSM@data,fsr2l
  1381  0000FE  C014  FFDA         	movff	LEDFSM@data+1,fsr2h
  1382  000102  0E02               	movlw	2
  1383  000104  D057               	goto	L2
  1384  000106                     l973:
  1385                           
  1386                           ;LEDFSM.c: 28: if(getClock() - data->currentClock >= 488){
  1387  000106  EE20 F001          	lfsr	2,1
  1388  00010A  5013               	movf	LEDFSM@data,w,c
  1389  00010C  26D9               	addwf	fsr2l,f,c
  1390  00010E  5014               	movf	LEDFSM@data+1,w,c
  1391  000110  22DA               	addwfc	fsr2h,f,c
  1392  000112  CFDE F015          	movff	postinc2,??_LEDFSM
  1393  000116  CFDE F016          	movff	postinc2,??_LEDFSM+1
  1394  00011A  CFDE F017          	movff	postinc2,??_LEDFSM+2
  1395  00011E  CFDE F018          	movff	postinc2,??_LEDFSM+3
  1396  000122  1E15               	comf	??_LEDFSM,f,c
  1397  000124  1E16               	comf	??_LEDFSM+1,f,c
  1398  000126  1E17               	comf	??_LEDFSM+2,f,c
  1399  000128  1E18               	comf	??_LEDFSM+3,f,c
  1400  00012A  2A15               	incf	??_LEDFSM,f,c
  1401  00012C  0E00               	movlw	0
  1402  00012E  2216               	addwfc	??_LEDFSM+1,f,c
  1403  000130  2217               	addwfc	??_LEDFSM+2,f,c
  1404  000132  2218               	addwfc	??_LEDFSM+3,f,c
  1405  000134  ECD1  F002         	call	_getClock	;wreg free
  1406  000138  C00F  F019         	movff	?_getClock,??_LEDFSM+4
  1407  00013C  C010  F01A         	movff	?_getClock+1,??_LEDFSM+5
  1408  000140  C011  F01B         	movff	?_getClock+2,??_LEDFSM+6
  1409  000144  C012  F01C         	movff	?_getClock+3,??_LEDFSM+7
  1410  000148  5015               	movf	??_LEDFSM,w,c
  1411  00014A  2419               	addwf	??_LEDFSM+4,w,c
  1412  00014C  6E1D               	movwf	(??_LEDFSM+8)& (0+255),c
  1413  00014E  5016               	movf	??_LEDFSM+1,w,c
  1414  000150  201A               	addwfc	??_LEDFSM+5,w,c
  1415  000152  6E1E               	movwf	(??_LEDFSM+9)& (0+255),c
  1416  000154  5017               	movf	??_LEDFSM+2,w,c
  1417  000156  201B               	addwfc	??_LEDFSM+6,w,c
  1418  000158  6E1F               	movwf	(??_LEDFSM+10)& (0+255),c
  1419  00015A  5018               	movf	??_LEDFSM+3,w,c
  1420  00015C  201C               	addwfc	??_LEDFSM+7,w,c
  1421  00015E  6E20               	movwf	(??_LEDFSM+11)& (0+255),c
  1422  000160  0EE8               	movlw	232
  1423  000162  5C1D               	subwf	??_LEDFSM+8,w,c
  1424  000164  0E01               	movlw	1
  1425  000166  581E               	subwfb	??_LEDFSM+9,w,c
  1426  000168  0E00               	movlw	0
  1427  00016A  581F               	subwfb	??_LEDFSM+10,w,c
  1428  00016C  0E00               	movlw	0
  1429  00016E  5820               	subwfb	??_LEDFSM+11,w,c
  1430  000170  A0D8               	btfss	status,0,c
  1431  000172  D030               	goto	l140
  1432                           
  1433                           ;LEDFSM.c: 29: data->currentClock = getClock();
  1434  000174  ECD1  F002         	call	_getClock	;wreg free
  1435  000178  C00F  F015         	movff	?_getClock,??_LEDFSM
  1436  00017C  C010  F016         	movff	?_getClock+1,??_LEDFSM+1
  1437  000180  C011  F017         	movff	?_getClock+2,??_LEDFSM+2
  1438  000184  C012  F018         	movff	?_getClock+3,??_LEDFSM+3
  1439  000188  EE20 F001          	lfsr	2,1
  1440  00018C  5013               	movf	LEDFSM@data,w,c
  1441  00018E  26D9               	addwf	fsr2l,f,c
  1442  000190  5014               	movf	LEDFSM@data+1,w,c
  1443  000192  22DA               	addwfc	fsr2h,f,c
  1444  000194  C015  FFDE         	movff	??_LEDFSM,postinc2
  1445  000198  C016  FFDE         	movff	??_LEDFSM+1,postinc2
  1446  00019C  C017  FFDE         	movff	??_LEDFSM+2,postinc2
  1447  0001A0  C018  FFDD         	movff	??_LEDFSM+3,postdec2
  1448  0001A4  06D9               	decf	fsr2l,f,c
  1449  0001A6  06D9               	decf	fsr2l,f,c
  1450                           
  1451                           ;LEDFSM.c: 30: PORTDbits.RD7 = 1;
  1452  0001A8  8E83               	bsf	3971,7,c	;volatile
  1453  0001AA                     L3:
  1454                           
  1455                           ;LEDFSM.c: 31: data->state = LED_OFF;
  1456  0001AA  C013  FFD9         	movff	LEDFSM@data,fsr2l
  1457  0001AE  C014  FFDA         	movff	LEDFSM@data+1,fsr2h
  1458  0001B2  0E01               	movlw	1
  1459  0001B4                     L2:
  1460  0001B4  6EDF               	movwf	indf2,c
  1461  0001B6  D00E               	goto	l140
  1462  0001B8                     l983:
  1463  0001B8  C013  FFD9         	movff	LEDFSM@data,fsr2l
  1464  0001BC  C014  FFDA         	movff	LEDFSM@data+1,fsr2h
  1465  0001C0  50DF               	movf	indf2,w,c
  1466                           
  1467                           ; Switch size 1, requested type "space"
  1468                           ; Number of cases is 3, Range of values is 0 to 2
  1469                           ; switch strategies available:
  1470                           ; Name         Instructions Cycles
  1471                           ; simple_byte           10     6 (average)
  1472                           ;	Chosen strategy is simple_byte
  1473  0001C2  0A00               	xorlw	0	; case 0
  1474  0001C4  B4D8               	btfsc	status,2,c
  1475  0001C6  D72B               	goto	l133
  1476  0001C8  0A01               	xorlw	1	; case 1
  1477  0001CA  B4D8               	btfsc	status,2,c
  1478  0001CC  D744               	goto	l965
  1479  0001CE  0A03               	xorlw	3	; case 2
  1480  0001D0  B4D8               	btfsc	status,2,c
  1481  0001D2  D799               	goto	l973
  1482  0001D4                     l140:
  1483  0001D4  0012               	return	
  1484  0001D6                     __end_of_LEDFSM:
  1485                           	opt stack 0
  1486                           tblptru	equ	0xFF8
  1487                           tblptrh	equ	0xFF7
  1488                           tblptrl	equ	0xFF6
  1489                           tablat	equ	0xFF5
  1490                           intcon	equ	0xFF2
  1491                           postinc0	equ	0xFEE
  1492                           postdec1	equ	0xFE5
  1493                           fsr1l	equ	0xFE1
  1494                           indf2	equ	0xFDF
  1495                           postinc2	equ	0xFDE
  1496                           postdec2	equ	0xFDD
  1497                           fsr2h	equ	0xFDA
  1498                           fsr2l	equ	0xFD9
  1499                           status	equ	0xFD8
  1500                           
  1501 ;; *************** function _getClock *****************
  1502 ;; Defined at:
  1503 ;;		line 17 in file "../src/PIC18/clock.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  4   14[COMRAM] unsigned long 
  1510 ;; Registers used:
  1511 ;;		None
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1517 ;;      Params:         4       0       0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0
  1520 ;;      Totals:         4       0       0       0       0       0       0
  1521 ;;Total ram usage:        4 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:    3
  1524 ;; This function calls:
  1525 ;;		Nothing
  1526 ;; This function is called by:
  1527 ;;		_sevenSegmentSM
  1528 ;;		_LEDFSM
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text11
  1533  0005A2                     __ptext11:
  1534                           	opt stack 0
  1535  0005A2                     _getClock:
  1536                           	opt stack 26
  1537                           
  1538                           ;clock.c: 22: return clock;
  1539                           
  1540                           ;incstack = 0
  1541  0005A2  C03D  F00F         	movff	_clock,?_getClock
  1542  0005A6  C03E  F010         	movff	_clock+1,?_getClock+1
  1543  0005AA  C03F  F011         	movff	_clock+2,?_getClock+2
  1544  0005AE  C040  F012         	movff	_clock+3,?_getClock+3
  1545  0005B2  0012               	return	
  1546  0005B4                     __end_of_getClock:
  1547                           	opt stack 0
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           intcon	equ	0xFF2
  1553                           postinc0	equ	0xFEE
  1554                           postdec1	equ	0xFE5
  1555                           fsr1l	equ	0xFE1
  1556                           indf2	equ	0xFDF
  1557                           postinc2	equ	0xFDE
  1558                           postdec2	equ	0xFDD
  1559                           fsr2h	equ	0xFDA
  1560                           fsr2l	equ	0xFD9
  1561                           status	equ	0xFD8
  1562                           
  1563 ;; *************** function _interruptISR *****************
  1564 ;; Defined at:
  1565 ;;		line 4 in file "../src/PIC18/Interrupt.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;		None               void
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1579 ;;      Params:         0       0       0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0
  1581 ;;      Temps:         14       0       0       0       0       0       0
  1582 ;;      Totals:        14       0       0       0       0       0       0
  1583 ;;Total ram usage:       14 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    2
  1586 ;; This function calls:
  1587 ;;		_timer0ISR
  1588 ;; This function is called by:
  1589 ;;		Interrupt level 2
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	intcode
  1594  000008                     __pintcode:
  1595                           	opt stack 0
  1596  000008                     _interruptISR:
  1597                           	opt stack 26
  1598                           
  1599                           ;incstack = 0
  1600  000008  CFFA F001          	movff	pclath,??_interruptISR
  1601  00000C  CFFB F002          	movff	pclatu,??_interruptISR+1
  1602  000010  CFE9 F003          	movff	fsr0l,??_interruptISR+2
  1603  000014  EDBF  F001         	call	int_func,f	;refresh shadow registers
  1604                           pclatu	equ	0xFFB
  1605                           pclath	equ	0xFFA
  1606                           tblptru	equ	0xFF8
  1607                           tblptrh	equ	0xFF7
  1608                           tblptrl	equ	0xFF6
  1609                           tablat	equ	0xFF5
  1610                           intcon	equ	0xFF2
  1611                           postinc0	equ	0xFEE
  1612                           fsr0l	equ	0xFE9
  1613                           postdec1	equ	0xFE5
  1614                           fsr1l	equ	0xFE1
  1615                           indf2	equ	0xFDF
  1616                           postinc2	equ	0xFDE
  1617                           postdec2	equ	0xFDD
  1618                           fsr2h	equ	0xFDA
  1619                           fsr2l	equ	0xFD9
  1620                           status	equ	0xFD8
  1621                           
  1622                           	psect	intcode_body
  1623  00037E                     __pintcode_body:
  1624                           	opt stack 26
  1625  00037E                     int_func:
  1626                           	opt stack 26
  1627  00037E  0006               	pop		; remove dummy address from shadow register refresh
  1628  000380  CFEA F004          	movff	fsr0h,??_interruptISR+3
  1629  000384  CFE1 F005          	movff	fsr1l,??_interruptISR+4
  1630  000388  CFE2 F006          	movff	fsr1h,??_interruptISR+5
  1631  00038C  CFD9 F007          	movff	fsr2l,??_interruptISR+6
  1632  000390  CFDA F008          	movff	fsr2h,??_interruptISR+7
  1633  000394  CFF3 F009          	movff	prodl,??_interruptISR+8
  1634  000398  CFF4 F00A          	movff	prodh,??_interruptISR+9
  1635  00039C  CFF6 F00B          	movff	tblptrl,??_interruptISR+10
  1636  0003A0  CFF7 F00C          	movff	tblptrh,??_interruptISR+11
  1637  0003A4  CFF8 F00D          	movff	tblptru,??_interruptISR+12
  1638  0003A8  CFF5 F00E          	movff	tablat,??_interruptISR+13
  1639                           
  1640                           ;Interrupt.c: 5: timer0ISR();
  1641  0003AC  ECDA  F002         	call	_timer0ISR	;wreg free
  1642  0003B0  C00E  FFF5         	movff	??_interruptISR+13,tablat
  1643  0003B4  C00D  FFF8         	movff	??_interruptISR+12,tblptru
  1644  0003B8  C00C  FFF7         	movff	??_interruptISR+11,tblptrh
  1645  0003BC  C00B  FFF6         	movff	??_interruptISR+10,tblptrl
  1646  0003C0  C00A  FFF4         	movff	??_interruptISR+9,prodh
  1647  0003C4  C009  FFF3         	movff	??_interruptISR+8,prodl
  1648  0003C8  C008  FFDA         	movff	??_interruptISR+7,fsr2h
  1649  0003CC  C007  FFD9         	movff	??_interruptISR+6,fsr2l
  1650  0003D0  C006  FFE2         	movff	??_interruptISR+5,fsr1h
  1651  0003D4  C005  FFE1         	movff	??_interruptISR+4,fsr1l
  1652  0003D8  C004  FFEA         	movff	??_interruptISR+3,fsr0h
  1653  0003DC  C003  FFE9         	movff	??_interruptISR+2,fsr0l
  1654  0003E0  C002  FFFB         	movff	??_interruptISR+1,pclatu
  1655  0003E4  C001  FFFA         	movff	??_interruptISR,pclath
  1656  0003E8  0011               	retfie		f
  1657  0003EA                     __end_of_interruptISR:
  1658                           	opt stack 0
  1659                           pclatu	equ	0xFFB
  1660                           pclath	equ	0xFFA
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           prodh	equ	0xFF4
  1666                           prodl	equ	0xFF3
  1667                           intcon	equ	0xFF2
  1668                           postinc0	equ	0xFEE
  1669                           fsr0h	equ	0xFEA
  1670                           fsr0l	equ	0xFE9
  1671                           postdec1	equ	0xFE5
  1672                           fsr1h	equ	0xFE2
  1673                           fsr1l	equ	0xFE1
  1674                           indf2	equ	0xFDF
  1675                           postinc2	equ	0xFDE
  1676                           postdec2	equ	0xFDD
  1677                           fsr2h	equ	0xFDA
  1678                           fsr2l	equ	0xFD9
  1679                           status	equ	0xFD8
  1680                           
  1681 ;; *************** function _timer0ISR *****************
  1682 ;; Defined at:
  1683 ;;		line 24 in file "../src/PIC18/clock.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;		None               void
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1697 ;;      Params:         0       0       0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0
  1700 ;;      Totals:         0       0       0       0       0       0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; Hardware stack levels required when called:    1
  1704 ;; This function calls:
  1705 ;;		_clearTimer0OverflowFlag
  1706 ;; This function is called by:
  1707 ;;		_interruptISR
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text13
  1712  0005B4                     __ptext13:
  1713                           	opt stack 0
  1714  0005B4                     _timer0ISR:
  1715                           	opt stack 26
  1716                           
  1717                           ;clock.c: 25: clock++;
  1718                           
  1719                           ;incstack = 0
  1720  0005B4  0E01               	movlw	1
  1721  0005B6  263D               	addwf	_clock,f,c
  1722  0005B8  0E00               	movlw	0
  1723  0005BA  223E               	addwfc	_clock+1,f,c
  1724  0005BC  223F               	addwfc	_clock+2,f,c
  1725  0005BE  2240               	addwfc	_clock+3,f,c
  1726                           
  1727                           ;clock.c: 26: clearTimer0OverflowFlag();
  1728  0005C0  ECF5  F002         	call	_clearTimer0OverflowFlag	;wreg free
  1729  0005C4  0012               	return	
  1730  0005C6                     __end_of_timer0ISR:
  1731                           	opt stack 0
  1732                           pclatu	equ	0xFFB
  1733                           pclath	equ	0xFFA
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           prodh	equ	0xFF4
  1739                           prodl	equ	0xFF3
  1740                           intcon	equ	0xFF2
  1741                           postinc0	equ	0xFEE
  1742                           fsr0h	equ	0xFEA
  1743                           fsr0l	equ	0xFE9
  1744                           postdec1	equ	0xFE5
  1745                           fsr1h	equ	0xFE2
  1746                           fsr1l	equ	0xFE1
  1747                           indf2	equ	0xFDF
  1748                           postinc2	equ	0xFDE
  1749                           postdec2	equ	0xFDD
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _clearTimer0OverflowFlag *****************
  1755 ;; Defined at:
  1756 ;;		line 38 in file "../src/PIC18/clock.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;		None               void
  1763 ;; Registers used:
  1764 ;;		None
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         0       0       0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_timer0ISR
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text14
  1784  0005EA                     __ptext14:
  1785                           	opt stack 0
  1786  0005EA                     _clearTimer0OverflowFlag:
  1787                           	opt stack 26
  1788                           
  1789                           ;clock.c: 39: INTCONbits.TMR0IF = 0;
  1790                           
  1791                           ;incstack = 0
  1792  0005EA  94F2               	bcf	intcon,2,c	;volatile
  1793  0005EC  0012               	return	
  1794  0005EE                     __end_of_clearTimer0OverflowFlag:
  1795                           	opt stack 0
  1796  0000                     pclatu	equ	0xFFB
  1797                           pclath	equ	0xFFA
  1798                           tblptru	equ	0xFF8
  1799                           tblptrh	equ	0xFF7
  1800                           tblptrl	equ	0xFF6
  1801                           tablat	equ	0xFF5
  1802                           prodh	equ	0xFF4
  1803                           prodl	equ	0xFF3
  1804                           intcon	equ	0xFF2
  1805                           postinc0	equ	0xFEE
  1806                           fsr0h	equ	0xFEA
  1807                           fsr0l	equ	0xFE9
  1808                           postdec1	equ	0xFE5
  1809                           fsr1h	equ	0xFE2
  1810                           fsr1l	equ	0xFE1
  1811                           indf2	equ	0xFDF
  1812                           postinc2	equ	0xFDE
  1813                           postdec2	equ	0xFDD
  1814                           fsr2h	equ	0xFDA
  1815                           fsr2l	equ	0xFD9
  1816                           status	equ	0xFD8
  1817                           pclatu	equ	0xFFB
  1818                           pclath	equ	0xFFA
  1819                           tblptru	equ	0xFF8
  1820                           tblptrh	equ	0xFF7
  1821                           tblptrl	equ	0xFF6
  1822                           tablat	equ	0xFF5
  1823                           prodh	equ	0xFF4
  1824                           prodl	equ	0xFF3
  1825                           intcon	equ	0xFF2
  1826                           postinc0	equ	0xFEE
  1827                           fsr0h	equ	0xFEA
  1828                           fsr0l	equ	0xFE9
  1829                           postdec1	equ	0xFE5
  1830                           fsr1h	equ	0xFE2
  1831                           fsr1l	equ	0xFE1
  1832                           indf2	equ	0xFDF
  1833                           postinc2	equ	0xFDE
  1834                           postdec2	equ	0xFDD
  1835                           fsr2h	equ	0xFDA
  1836                           fsr2l	equ	0xFD9
  1837                           status	equ	0xFD8
  1838                           
  1839                           	psect	rparam
  1840  0000                     pclatu	equ	0xFFB
  1841                           pclath	equ	0xFFA
  1842                           tblptru	equ	0xFF8
  1843                           tblptrh	equ	0xFF7
  1844                           tblptrl	equ	0xFF6
  1845                           tablat	equ	0xFF5
  1846                           prodh	equ	0xFF4
  1847                           prodl	equ	0xFF3
  1848                           intcon	equ	0xFF2
  1849                           postinc0	equ	0xFEE
  1850                           fsr0h	equ	0xFEA
  1851                           fsr0l	equ	0xFE9
  1852                           postdec1	equ	0xFE5
  1853                           fsr1h	equ	0xFE2
  1854                           fsr1l	equ	0xFE1
  1855                           indf2	equ	0xFDF
  1856                           postinc2	equ	0xFDE
  1857                           postdec2	equ	0xFDD
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     44      65
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LEDFSM@data	PTR struct LEDData size(2) Largest target is 5
		 -> main@ledData(COMRAM[5]), 

    LEDInit@data	PTR struct LEDData size(2) Largest target is 5
		 -> main@ledData(COMRAM[5]), 

    sevenSegmentSM@data	PTR struct SPIData size(2) Largest target is 7
		 -> main@spiData(COMRAM[7]), 

    startSPI@data	PTR struct SPIData size(2) Largest target is 7
		 -> main@spiData(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_LEDFSM
    _main->_sevenSegmentSM
    _sevenSegmentSM->_getClock
    _initClock->_OpenTimer0
    _LEDFSM->_getClock

Critical Paths under _interruptISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interruptISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interruptISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0     961
                                             32 COMRAM    12    12      0
                             _LEDFSM
                            _LEDInit
                            _OpenSPI
                          _OpenUSART
                          _initClock
                     _sevenSegmentSM
                           _startSPI
 ---------------------------------------------------------------------------------
 (1) _startSPI                                             2     0      2      58
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _sevenSegmentSM                                      14    12      2     238
                                             18 COMRAM    14    12      2
                           _WriteSPI
                           _getClock
 ---------------------------------------------------------------------------------
 (2) _WriteSPI                                             2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0      30
                         _OpenTimer0
                    _enableInterrupt
 ---------------------------------------------------------------------------------
 (2) _enableInterrupt                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      30
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     193
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenSPI                                              3     1      2     146
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _LEDInit                                              2     0      2      58
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _LEDFSM                                              14    12      2     178
                                             18 COMRAM    14    12      2
                           _getClock
 ---------------------------------------------------------------------------------
 (2) _getClock                                             4     0      4       0
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _interruptISR                                        14    14      0       0
                                              0 COMRAM    14    14      0
                          _timer0ISR
 ---------------------------------------------------------------------------------
 (4) _timer0ISR                                            0     0      0       0
            _clearTimer0OverflowFlag
 ---------------------------------------------------------------------------------
 (5) _clearTimer0OverflowFlag                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDFSM
     _getClock
   _LEDInit
   _OpenSPI
   _OpenUSART
   _initClock
     _OpenTimer0
     _enableInterrupt
   _sevenSegmentSM
     _WriteSPI
     _getClock
   _startSPI

 _interruptISR (ROOT)
   _timer0ISR
     _clearTimer0OverflowFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2C      41       1       51.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      41      15        0.0%
DATA                 0      0      41       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Nov 03 09:51:58 2014

                     _SSPSTATbits 000FC7                                l43 04AA  
                              l92 037C                               l202 0554  
                             l203 0556                               l140 01D4  
                             l133 001E                               l232 0420  
                             l233 0422                               l170 04FE  
                             l234 042C                               l171 04E6  
                             l163 04C0                               l235 042E  
                             l172 04EA                               l228 040C  
                             l165 04C4                               l237 0450  
                             l166 04C6                               l169 04E0  
                             l185 058E                               l187 058A  
                             l935 04CA                               l939 04EE  
                             l973 0106                               l965 0056  
                             l893 040E                               l885 0400  
                             l983 01B8                               l995 0254  
                             l987 01D8                               fsr2 000FD9  
                     main@ledData 0021                      __CFG_LVP$OFF 000000  
                 __end_of_LEDInit 05E6                      __CFG_WDT$OFF 000000  
                            l1005 0358                              l1009 0366  
                            l1033 0490                     __CFG_DEBUG$ON 000000  
                    __CFG_PWRT$ON 000000                              _main 0452  
                     main@spiData 0026                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            pclat 000FFA                   _enableInterrupt 05E6  
                            prodh 000FF4                              prodl 000FF3  
                            start 0018                       LEDInit@data 000F  
                 __end_of_OpenSPI 0506                             ?_main 0001  
                           _T0CON 000FD5                             _RCREG 000FAE  
                           _RCSTA 000FAB                             _TMR0H 000FD7  
                           _TMR0L 000FD6                             _SPBRG 000FAF  
                           _TXREG 000FAD                             _TXSTA 000FAC  
                           _clock 003D                             tablat 000FF5  
                           status 000FD8                   __initialization 0506  
                    __end_of_main 04AC                            ??_main 0021  
                    startSPI@data 000F                     __activetblptr 000002  
                       ??_LEDInit 0011           __end_of_enableInterrupt 05EA  
                __end_of_WriteSPI 0590                            _LEDFSM 001C  
                      _OpenTimer0 053A                            _SPBRGH 000FB0  
                          _SSPBUF 000FC9                  __end_of_getClock 05B4  
                       ??_OpenSPI 0011                __size_of_OpenUSART 0068  
                OpenTimer0@config 000F                            _number 002D  
                 WriteSPI@TempVar 000F                      __pdataCOMRAM 002D  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                  __end_of_startSPI 05A2  
                      __accesstop 0080           __end_of__initialization 0530  
        ?_clearTimer0OverflowFlag 0001                    __pcstackCOMRAM 0001  
                   ?_interruptISR 0001                 __end_of_OpenUSART 0452  
                ?_enableInterrupt 0001                           ?_LEDFSM 0013  
                     ?_OpenTimer0 0001                __size_of_initClock 001E  
                  ??_interruptISR 0001                         ?_WriteSPI 0001  
              __size_of_timer0ISR 0012                           _LEDInit 05D6  
         __size_of_sevenSegmentSM 01A8                         ?_getClock 000F  
                         _SSPCON1 000FC6                           _SSPSTAT 000FC7  
                 __size_of_LEDFSM 01BA                           _OpenSPI 04AC  
                         __Hparam 0000                           __Lparam 0000  
                       ?_startSPI 000F                           __pcinit 0506  
                         __ramtop 0600                        ??_WriteSPI 000F  
             __size_of_OpenTimer0 0020                           __ptext0 0452  
                         __ptext1 0590                           __ptext2 01D6  
                         __ptext3 0578                           __ptext4 055A  
                         __ptext5 05E6                           __ptext6 053A  
                         __ptext7 03EA                           __ptext8 04AC  
                         __ptext9 05D6                 __end_of_initClock 0578  
                       _T0CONbits 000FD5                        ??_getClock 0013  
                  __pintcode_body 037E              end_of_initialization 0530  
                   __Lmediumconst 0000                           int_func 037E  
               __end_of_timer0ISR 05C6                         _RCSTAbits 000FAB  
                         postdec1 000FE5                           postdec2 000FDD  
                WriteSPI@data_out 0010                           postinc0 000FEE  
                         postinc2 000FDE                        ??_startSPI 0011  
                      LEDFSM@data 0013                         _PORTCbits 000F82  
                       _PORTDbits 000F83                         _TRISAbits 000F92  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
            __end_of_interruptISR 03EA                    __end_of_LEDFSM 01D6  
                       _TXSTAbits 000FAC                     __pidataCOMRAM 05C6  
                OpenSPI@smp_phase 0010  __size_of_clearTimer0OverflowFlag 0004  
             start_initialization 0506                    _sevenSegmentSM 01D6  
                OpenSPI@sync_mode 0011                          ??_LEDFSM 0015  
                    ??_OpenTimer0 000F                         _OpenUSART 03EA  
                __CFG_OSC$INTIO67 000000                __end_of_OpenTimer0 055A  
          __end_of_sevenSegmentSM 037E                          ?_LEDInit 000F  
               __size_of_WriteSPI 0018                       __pbssCOMRAM 003D  
               __size_of_getClock 0012                        ?_OpenUSART 000F  
                        ?_OpenSPI 000F          __size_of_enableInterrupt 0004  
                       __pintcode 0008                sevenSegmentSM@data 0013  
               __size_of_startSPI 0012             __size_of_interruptISR 03E2  
                 ?_sevenSegmentSM 0013                         _initClock 055A  
                        _PIE1bits 000F9D                          _PIR1bits 000F9E  
                       _timer0ISR 05B4                      _interruptISR 0008  
         _clearTimer0OverflowFlag 05EA                   OpenSPI@bus_mode 000F  
                __size_of_LEDInit 0010                        ?_initClock 0001  
                       copy_data0 0524                       ??_OpenUSART 0011  
                 OpenUSART@config 0014                          __Hrparam 0000  
                      ?_timer0ISR 0001                          __Lrparam 0000  
                __size_of_OpenSPI 005A                 ??_enableInterrupt 000F  
                        _WriteSPI 0578                          _getClock 05A2  
                        __ptext10 001C                          __ptext11 05A2  
                        __ptext13 05B4                          __ptext14 05EA  
                   __size_of_main 005A         ??_clearTimer0OverflowFlag 0001  
                        _startSPI 0590                        _INTCONbits 000FF2  
                  OpenUSART@spbrg 000F                       ??_initClock 0010  
                        intlevel2 0000                        _OSCCONbits 000FD3  
                     ??_timer0ISR 0001                  ??_sevenSegmentSM 0015  
                     _SSPCON1bits 000FC6   __end_of_clearTimer0OverflowFlag 05EE  
                    _USART_Status 0041  
